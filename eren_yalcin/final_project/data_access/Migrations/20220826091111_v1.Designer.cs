// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using data_access;

namespace data_access.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20220826091111_v1")]
    partial class v1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Entity.categories", b =>
                {
                    b.Property<int>("Category_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Category_name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Category_id");

                    b.ToTable("categories");
                });

            modelBuilder.Entity("Entity.products", b =>
                {
                    b.Property<int>("Product_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CategoriesCategory_id")
                        .HasColumnType("int");

                    b.Property<string>("Create_date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("Product_name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Product_id");

                    b.HasIndex("CategoriesCategory_id");

                    b.ToTable("products");
                });

            modelBuilder.Entity("Entity.tags", b =>
                {
                    b.Property<int>("Tag_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Product_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Tag_name")
                        .HasColumnType("int");

                    b.HasKey("Tag_id");

                    b.ToTable("tags");
                });

            modelBuilder.Entity("Entity.tags_products", b =>
                {
                    b.Property<int>("Tag_product_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Product_id")
                        .HasColumnType("int");

                    b.Property<int?>("Product_id1")
                        .HasColumnType("int");

                    b.Property<int>("Tag_id")
                        .HasColumnType("int");

                    b.Property<int?>("TagsTag_id")
                        .HasColumnType("int");

                    b.HasKey("Tag_product_id");

                    b.HasIndex("Product_id1");

                    b.HasIndex("TagsTag_id");

                    b.ToTable("tags_products");
                });

            modelBuilder.Entity("Entity.products", b =>
                {
                    b.HasOne("Entity.categories", "Categories")
                        .WithMany("product")
                        .HasForeignKey("CategoriesCategory_id");

                    b.Navigation("Categories");
                });

            modelBuilder.Entity("Entity.tags_products", b =>
                {
                    b.HasOne("Entity.products", "Product")
                        .WithMany("tagsProducts")
                        .HasForeignKey("Product_id1");

                    b.HasOne("Entity.tags", "Tags")
                        .WithMany("tagsProducts")
                        .HasForeignKey("TagsTag_id");

                    b.Navigation("Product");

                    b.Navigation("Tags");
                });

            modelBuilder.Entity("Entity.categories", b =>
                {
                    b.Navigation("product");
                });

            modelBuilder.Entity("Entity.products", b =>
                {
                    b.Navigation("tagsProducts");
                });

            modelBuilder.Entity("Entity.tags", b =>
                {
                    b.Navigation("tagsProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
